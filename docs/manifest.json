{
  "homepages": [],
  "source_base_path": "C:/hi/git/RateLimiter/RateLimiter.Documentation",
  "xrefmap": "xrefmap.yml",
  "files": [
    {
      "type": "ManagedReference",
      "source_relative_path": "api/RateLimiter.AwaitableConstraintExtension.yml",
      "output": {
        ".html": {
          "relative_path": "api/RateLimiter.AwaitableConstraintExtension.html",
          "hash": "Eq5Lx1ZnKbpNMps+0vy29g=="
        }
      },
      "is_incremental": true,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/RateLimiter.CountByIntervalAwaitableConstraint.yml",
      "output": {
        ".html": {
          "relative_path": "api/RateLimiter.CountByIntervalAwaitableConstraint.html",
          "hash": "/WIW8/iYPUsatZi1oV2jIw=="
        }
      },
      "is_incremental": true,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/RateLimiter.IAwaitableConstraint.yml",
      "output": {
        ".html": {
          "relative_path": "api/RateLimiter.IAwaitableConstraint.html",
          "hash": "DGwubpF1xNzij1f3xEj8ZQ=="
        }
      },
      "is_incremental": true,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/RateLimiter.IRateLimiter.yml",
      "output": {
        ".html": {
          "relative_path": "api/RateLimiter.IRateLimiter.html",
          "hash": "L7WHSejQUUdPQsy/+fz5Sw=="
        }
      },
      "is_incremental": true,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/RateLimiter.ITime.yml",
      "output": {
        ".html": {
          "relative_path": "api/RateLimiter.ITime.html",
          "hash": "lOAi1GKufkif1/M8PFQuyA=="
        }
      },
      "is_incremental": true,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/RateLimiter.LimitedSizeStack-1.yml",
      "output": {
        ".html": {
          "relative_path": "api/RateLimiter.LimitedSizeStack-1.html",
          "hash": "Z+TAxeIiVhFTkKAjMm4zvg=="
        }
      },
      "is_incremental": true,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/RateLimiter.PersistentCountByIntervalAwaitableConstraint.yml",
      "output": {
        ".html": {
          "relative_path": "api/RateLimiter.PersistentCountByIntervalAwaitableConstraint.html",
          "hash": "HAxzwyhbNhwlespoyPtU4w=="
        }
      },
      "is_incremental": true,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/RateLimiter.TimeLimiter.yml",
      "output": {
        ".html": {
          "relative_path": "api/RateLimiter.TimeLimiter.html",
          "hash": "IQ/MfowGYY1Ik5X21WE7VA=="
        }
      },
      "is_incremental": true,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/RateLimiter.TimeLimiterAwaiter.yml",
      "output": {
        ".html": {
          "relative_path": "api/RateLimiter.TimeLimiterAwaiter.html",
          "hash": "LUkm4opuVXlen/4WfQRK3Q=="
        }
      },
      "is_incremental": true,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/RateLimiter.TimeLimiterExtension.yml",
      "output": {
        ".html": {
          "relative_path": "api/RateLimiter.TimeLimiterExtension.html",
          "hash": "jtQ/NLH+EN3W1slAQRQCVA=="
        }
      },
      "is_incremental": true,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/RateLimiter.yml",
      "output": {
        ".html": {
          "relative_path": "api/RateLimiter.html",
          "hash": "Gy/9f/i1Lya0SbDZdWM7jg=="
        }
      },
      "is_incremental": true,
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "api/toc.yml",
      "output": {
        ".html": {
          "relative_path": "api/toc.html",
          "hash": "jwK/rX07i25qkSY+8ke7xw=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "index.md",
      "output": {
        ".html": {
          "relative_path": "index.html",
          "hash": "tNv0m3d9hjc6ITRTval2nQ=="
        }
      },
      "is_incremental": true,
      "version": ""
    },
    {
      "log_codes": [
        "InvalidFileLink"
      ],
      "type": "Toc",
      "source_relative_path": "toc.yml",
      "output": {
        ".html": {
          "relative_path": "toc.html",
          "hash": "u7k/slcMFve7dcdc0ROHBQ=="
        }
      },
      "is_incremental": false,
      "version": ""
    }
  ],
  "incremental_info": [
    {
      "status": {
        "can_incremental": true,
        "incrementalPhase": "build",
        "total_file_count": 0,
        "skipped_file_count": 0
      },
      "processors": {
        "TocDocumentProcessor": {
          "can_incremental": false,
          "details": "Processor TocDocumentProcessor cannot support incremental build because the processor doesn't implement ISupportIncrementalDocumentProcessor interface.",
          "incrementalPhase": "build",
          "total_file_count": 0,
          "skipped_file_count": 0
        },
        "ManagedReferenceDocumentProcessor": {
          "can_incremental": true,
          "incrementalPhase": "build",
          "total_file_count": 11,
          "skipped_file_count": 11
        },
        "ConceptualDocumentProcessor": {
          "can_incremental": true,
          "incrementalPhase": "build",
          "total_file_count": 1,
          "skipped_file_count": 1
        }
      }
    },
    {
      "status": {
        "can_incremental": true,
        "details": "Can support incremental post processing.",
        "incrementalPhase": "postProcessing",
        "total_file_count": 0,
        "skipped_file_count": 0
      },
      "processors": {}
    }
  ],
  "version_info": {},
  "groups": [
    {
      "xrefmap": "xrefmap.yml"
    }
  ]
}